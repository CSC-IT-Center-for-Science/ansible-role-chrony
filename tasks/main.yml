---
- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower }}-{{
              ansible_distribution_version }}.yml"
        - "{{ ansible_distribution|lower }}-{{
              ansible_distribution_release }}.yml"
        - "{{ ansible_distribution|lower }}-{{
              ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- name: ensure ntp package is absent
  package:
    name: ntp
    state: absent
  when: chrony_remove_ntp|bool

- name: ensure chrony requirements packages are installed
  package:
    name: "{{ item }}"
    state: "{{ chrony_pkg_state }}"
  with_items: "{{ chrony_pre_pkgs }}"
  when: chrony_pre_pkgs|length > 0

- name: ensure chrony packages are installed
  package:
    name: "{{ item }}"
    state: "{{ chrony_pkg_state }}"
  with_items: "{{ chrony_pkgs }}"
  when: chrony_pkgs|length > 0

- name: update chrony.conf from template
  template:
    src: chrony.conf
    dest: "{{ chrony_path_info.conf_path }}"
    owner: root
    group: root
    mode: 0644
    backup: yes
  register: chrony_conf

# ansible service module has problem with chroots, #21026
- name: ensure chrony service is enabled on chroots
  command: systemctl enable "{{ chrony_service_info.name }}"
  when: ansible_connection == 'chroot'

- name: ensure chrony service is started and enabled
  service:
    name: "{{ chrony_service_info.name }}"
    enabled: yes
    state: started
    pattern: chronyd
  when: ansible_connection != 'chroot'

- name: ensure chrony service is restarted if necessary
  service:
    name: "{{ chrony_service_info.name }}"
    state: restarted
    pattern: chronyd
  when: (chrony_conf is changed) and (ansible_connection != 'chroot')
